{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"data",
				"data_validation\tfunction"
			],
			[
				"data_",
				"data_valid"
			],
			[
				"dat",
				"data_validation\tfunction"
			],
			[
				"from",
				"from_kg\tfunction"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"fo",
				"folder_exclude_patterns"
			],
			[
				"wr",
				"write\tfunction"
			],
			[
				"add",
				"add_argument\tfunction"
			],
			[
				"__",
				"__file__\tinstance"
			],
			[
				"example",
				"example_poop"
			],
			[
				"exampl",
				"example_string"
			],
			[
				"day",
				"day_\tstatement"
			],
			[
				"doom",
				"doomsday\tstatement"
			],
			[
				"date",
				"dateinfo\tstatement"
			],
			[
				"inter",
				"integer"
			],
			[
				"str",
				"string\tparam"
			],
			[
				"grou",
				"group"
			],
			[
				"head",
				"headers"
			],
			[
				"hea",
				"headers"
			],
			[
				"rea",
				"read_csv\tfunction"
			],
			[
				"K",
				"KNeighborsClassifier\timport"
			],
			[
				"line",
				"line_contents\tstatement"
			],
			[
				"s",
				"str\tstrrep"
			],
			[
				"f",
				"f_contents\tstatement"
			],
			[
				"top",
				"top_100\tstatement"
			],
			[
				"sc",
				"scatter\tfunction"
			],
			[
				"Ivy",
				"Ivy_League"
			],
			[
				"grea",
				"great_income\tstatement"
			],
			[
				"teachin",
				"teaching_and_total\tstatement"
			],
			[
				"great",
				"great_total"
			],
			[
				"ivy",
				"ivy_schools\tstatement"
			],
			[
				"b",
				"BeautifulSoup\tclass"
			],
			[
				"next",
				"next_date"
			],
			[
				"nex",
				"next_unix\tstatement"
			],
			[
				"fore",
				"forecast_set\tstatement"
			],
			[
				"last",
				"last_unix"
			],
			[
				"forecas",
				"forecast_out\tstatement"
			],
			[
				"drop",
				"dropna"
			],
			[
				"cross",
				"cross_validation\tmodule"
			],
			[
				"foreca",
				"forecast_out\tstatement"
			],
			[
				"html",
				"html_page\tstatement"
			],
			[
				"au",
				"author"
			],
			[
				"DATA",
				"DATAFILE\tstatement"
			],
			[
				"Di",
				"DictReader\tclass"
			],
			[
				"inf",
				"infsumdict\tstatement"
			],
			[
				"di",
				"dic_t\tstatement"
			],
			[
				"dic",
				"dic_rc34\tstatement"
			],
			[
				"matri",
				"matrix34"
			],
			[
				"pre",
				"prev_col_temp"
			],
			[
				"prev",
				"prev_row_temp"
			],
			[
				"row",
				"row_num"
			],
			[
				"col",
				"col_num"
			],
			[
				"ro",
				"row_num\tforstmt"
			],
			[
				"sle",
				"self_looped\tstatement"
			],
			[
				"lcm",
				"lcm\tfunction"
			],
			[
				"l",
				"lcm2\tfunction"
			],
			[
				"num",
				"numerators\tstatement"
			],
			[
				"denom",
				"denominators\tstatement"
			],
			[
				"n",
				"numerator"
			],
			[
				"frac",
				"Fraction\tclass"
			],
			[
				"sub",
				"subelem\tforstmt"
			],
			[
				"L",
				"lstrip\tfunction"
			],
			[
				"len",
				"length\tstatement"
			],
			[
				"in",
				"index\tfunction"
			],
			[
				"x",
				"xnum\tstatement"
			],
			[
				"base",
				"base10toN\tfunction"
			],
			[
				"re",
				"replace\tfunction"
			],
			[
				"down",
				"download_file_from_google_drive\tfunction"
			],
			[
				"array",
				"array2\tstatement"
			],
			[
				"rd",
				"rd\tfunction"
			],
			[
				"readfile",
				"readfile2"
			],
			[
				"read",
				"readfile\tparam"
			],
			[
				"arr",
				"array2\tstatement"
			],
			[
				"fin",
				"filename"
			],
			[
				"full",
				"fullmeld_contents\tstatement"
			],
			[
				"hash",
				"hash_contents\tstatement"
			],
			[
				"exc",
				"Exception\tclass"
			],
			[
				"new",
				"new_contents\tstatement"
			],
			[
				"req",
				"request"
			],
			[
				"chunk",
				"chunk_size"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"finda",
				"find_all\tfunction"
			],
			[
				"spac",
				"word-spacing"
			],
			[
				"tex",
				"text-align"
			],
			[
				"fon",
				"font-size"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dowc.py",
			"settings":
			{
				"buffer_size": 3243,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "tkin.py",
			"settings":
			{
				"buffer_size": 662,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "playgg.py",
			"settings":
			{
				"buffer_size": 31,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 279.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"run curr",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Snippet: ",
				"Snippet: strrep"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"Anaconda:",
				"Anaconda: Disable linting on this file"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 696.0
	},
	"console":
	{
		"height": 213.0,
		"history":
		[
			"sublime.log_commands(False)",
			"sublime.log_commands(false)",
			"sublime.log_commands(True)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/andrew/Desktop/code/Day_of_week"
	],
	"file_history":
	[
		"/C/Users/andrew/Desktop/code/Day_of_week/argparseexample.py",
		"/C/Users/andrew/Desktop/code/Day_of_week/README.md",
		"/C/Users/andrew/Desktop/code/Day_of_week/.gitignore",
		"/C/Users/andrew/Desktop/Courses/Python Mega course udemy/Build GUI w tkinter/tkin.py",
		"/C/Users/andrew/Desktop/code/Day_of_week/newgui.py",
		"/C/Users/andrew/Desktop/pyqt5-master/examples/dialogs/standarddialogs.py",
		"/C/Users/andrew/Desktop/pyqt5-master/examples/layouts/basiclayouts.py",
		"/C/Users/andrew/Desktop/pyqt5-master/examples/activeqt/webbrowser/webbrowser.py",
		"/C/Users/andrew/Desktop/pyqt5-master/examples/tutorials/addressbook/part7.py",
		"/C/Selenium Drivers/PyQt4_gpl_win-4.12/examples/demos/qtdemo/textbutton.py",
		"/C/Selenium Drivers/PyQt4_gpl_win-4.12/README",
		"/C/Users/andrew/Desktop/code/Day_of_week/age.py",
		"/C/Users/andrew/Desktop/code/Day_of_week/dayofweekcalculator.py",
		"/C/Users/andrew/Desktop/code/Day_of_week/leap.py",
		"/C/Users/andrew/Desktop/code/Day_of_week/dayofweek.sublime-project",
		"/C/Users/andrew/Desktop/code/cs50/chrexample.py",
		"/C/Users/andrew/Desktop/code/CrackSAT/crackSAT.sublime-project",
		"/C/Users/andrew/Desktop/code/CrackSAT/2ndsetofsat.py",
		"/C/Users/andrew/Desktop/code/CrackSAT/CrackSAT - Shortcut.lnk",
		"/C/Users/andrew/Desktop/Ahk original scripts/ahk-edit.sublime-project",
		"/C/Users/andrew/Desktop/Ahk original scripts/globalhotkeys.ahk",
		"/C/Users/andrew/Desktop/Public-AutoHotKey-Scripts-master/Public-AutoHotKey-Scripts-master/GUI/UserCommands.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/localhotkeys.ahk",
		"/C/Users/andrew/Desktop/Ahk",
		"/C/Users/andrew/Desktop/Public-AutoHotKey-Scripts-master/Public-AutoHotKey-Scripts-master/Host.ahk",
		"/C/Users/andrew/Desktop/localhotkeys.ahk",
		"/C/Users/andrew/Desktop/Public-AutoHotKey-Scripts-master/Public-AutoHotKey-Scripts-master/original",
		"/C/Users/andrew/Desktop/Public-AutoHotKey-Scripts-master/Public-AutoHotKey-Scripts-master/scripts/localhotkeys.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/Other's scripts/AutoCorrect.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/combinefiles.py",
		"/C/Users/andrew/Desktop/Ahk original scripts/COMMIT_EDITMSG.COMMIT_EDITMSG",
		"/C/Users/andrew/Desktop/Ahk original scripts/globalhotstrings.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/wrapquotes.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/msword.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/gitbashpaste.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/epicpen.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/spotify.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/ahkworks.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/drawboardworks.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/myspeedworks.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/onenoteworks.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/pptworks.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/skypeworks.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/remaps.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/ytchannel.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/mousewheel.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/minimize.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/homeend.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/google.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/usercommandhelp.txt",
		"/C/Users/andrew/Desktop/Ahk original scripts/gitbash.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/sublime.ahk",
		"/C/Users/andrew/AppData/Roaming/Sublime Text 3/Packages/User/boil.sublime-snippet",
		"/C/Users/andrew/Desktop/Ahk original scripts/newfile.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/hotspot.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/backduplicate.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/newp.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/sunset.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/printact.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/works.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/AutoCorrect.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/alwaysontop.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/combineremaps.py",
		"/C/Users/andrew/Desktop/Ahk original scripts/remap insert to appskey.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/remap ctrl.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/remap appskey.ahk",
		"/C/Users/andrew/Desktop/Ahk original scripts/Product Review.ahk",
		"/C/Users/andrew/Desktop/code/Day_of_week/dowc.py",
		"/C/Users/andrew/Desktop/code/Day_of_week/playg.py",
		"/C/Users/andrew/AppData/Roaming/Sublime Text 3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/Users/andrew/Desktop/code/Days_of_week/dowc.py",
		"/C/Users/andrew/Desktop/code/Days_of_week/Day-of-the-Week-Calculator/dayofweekcalculator.py",
		"/C/Users/andrew/Desktop/Sample-Files/osexample.py",
		"/C/Users/andrew/Desktop/Sample-Files/merger.py",
		"/C/Users/andrew/Desktop/code/Days_of_week/Day-of-the-Week-Calculator/leap.py",
		"/C/Users/andrew/Desktop/Python Mega Course/new file.py",
		"/C/Users/andrew/Desktop/code/foobar/Level 1/brailleTranslator.py",
		"/C/Users/andrew/Desktop/code/foobar/Level 2/anyBase.py",
		"/C/Users/andrew/Desktop/code/dataWrangling/xlrd.py",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/foobar/anybase.py",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/CrackSAT/idnums.txt",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/python learning.sublime-project",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/python to access web coursera.sublime-project",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/scraphalls.py",
		"/C/Users/andrew/Links/Python35.lnk",
		"/C/Users/andrew/Desktop/Days_of_week/Day-of-the-Week-Calculator/dayofweekcalculator.py",
		"/C/Users/andrew/Desktop/googlefoo/imgs.py",
		"/C/Users/andrew/Desktop/googlefoo/pg.py",
		"/C/Users/andrew/Desktop/googlefoo/playg.py",
		"/C/Users/andrew/Desktop/Days_of_week/googlefoo/imgs.py",
		"/C/Users/andrew/Desktop/Days_of_week/dayofweek.py",
		"/C/Users/andrew/Desktop/googlefoo/googlefoo.py",
		"/C/Program Files/Sublime Text 3/naif1.py",
		"/C/Users/andrew/Desktop/googlefoo/dayofweek.py",
		"/C/Program Files/Sublime Text 3/starcars.py",
		"/C/Users/andrew/Desktop/googlefoo/Demographic_Statistics_By_Zip_Code.py",
		"/C/Users/andrew/Desktop/MNIST data/playg.py",
		"/C/Users/andrew/Desktop/MNIST data/knn_mnist.py",
		"/C/Users/andrew/Desktop/table1.xls",
		"/C/Users/andrew/Desktop/Myers-briggs project/chasefiles.py",
		"/C/Users/andrew/Desktop/chase/chase3.txt",
		"/C/Users/andrew/Desktop/chase/c1.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/Q-e Support Group That Each Myers-Briggs Personality Type Needs.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggs_formater.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/play.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/get_briggs_articles.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggs_titles.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/get_briggs_urls.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggs_renamer.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/Briggs_Articles_w_Titles/A Breakdown Of the How I Met Your Mother Characters Based On Myers-Briggs Personality Types.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/Briggs_Articles_w_Titles/Q-Definition Of Heaven For Each Myers-Briggs Personality Type.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/Briggs_Articles_w_Titles/e Definition Of Heaven For Each Myers-Briggs Personality Type.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggs_bachelor.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggslinxclean.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggslinx.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/cleanbriggs.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/parserpython3.py",
		"/C/Users/andrew/Desktop/getthebriggs.py",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/gethref.py",
		"/C/Users/andrew/AppData/Local/Programs/Python/Python35/geturls.py",
		"/C/Users/andrew/Desktop/dataCamp/parser_briggs.py",
		"/C/Users/andrew/Desktop/PHP/new.php",
		"/C/Users/andrew/Desktop/PHP/print.py",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggs_edit1.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/briggs_types.txt",
		"/C/Users/andrew/Desktop/Myers-briggs project/myers_briggs.py",
		"/C/Users/andrew/Desktop/dataCamp/top_100.py",
		"/C/Users/andrew/Desktop/dataCamp/ivyleagues.py"
	],
	"find":
	{
		"height": 61.0
	},
	"find_in_files":
	{
		"height": 138.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"onenote",
			"#IfWinActive, ahk_class screenClass ",
			"#IfWinActive, ahk_class screenClass \n",
			"#IfWinActive, Drawboard PDF",
			"print",
			"type",
			"\\",
			"\\n",
			"/n",
			"\\",
			"Which Type Would You Rather Be",
			"p",
			"?",
			"Which Type Would You Rather Be?",
			"\\",
			"bach",
			"contest",
			"\\",
			"Nirvana",
			"while",
			"or",
			"print",
			"to",
			"fro",
			"fro,to",
			"arr",
			"dic_rc34",
			"matrix34",
			"print",
			"cum",
			"self_looped",
			"ind",
			"temp",
			"ans",
			"print",
			"run_q=",
			"print",
			"terms",
			"prod_d",
			"cur_val",
			"cur_d",
			"elem",
			"t",
			"t2",
			"ind",
			"subind",
			"test",
			"alistmeldtrim",
			"Subject",
			"line",
			"Line",
			"line",
			"array1",
			"full",
			"content_from_web",
			"=",
			"newmeld",
			">>",
			"\"",
			"input",
			"trans",
			"=== Plugin Name ===\nContributors: (this should be a list of wordpress.org userid's)\nDonate link: http://example.com/\nTags: comments, spam\nRequires at least: 4.6\nTested up to: 4.7",
			"chunk_size"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\\\",
			"/",
			"\\n",
			"/",
			"Metallica",
			",",
			"(x2,y2)",
			"(x1,y1)",
			"path",
			"t",
			"dic_t",
			"t",
			"row_num",
			"ind",
			"prev_row_temp",
			"num_terminals",
			"r_denom",
			"r_num",
			"prod_d",
			"row",
			"t",
			"i",
			"j",
			"array",
			"alistmeldtrim2",
			"array",
			"",
			" = ",
			"meld_trim",
			">",
			"",
			"plaintext",
			"answer"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dowc.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3243,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tkin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 662,
						"regions":
						{
						},
						"selection":
						[
							[
								441,
								441
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										441,
										442
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										406,
										407
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "playgg.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								30
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										29,
										30
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										24,
										25
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 288.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Anaconda.sublime-build",
	"project": "dayofweek.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ivyleagues.py"
			],
			[
				"my",
				"my_fcns.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
